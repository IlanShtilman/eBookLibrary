@using LibraryProject.Data.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<LibraryProject.Models.Book>
@{
    ViewData["Title"] = "Store";
    // Add these debug lines
    var bookCount = Model?.Count() ?? 0;
    var firstBook = Model?.FirstOrDefault();
}
<link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap" rel="stylesheet">
<link rel="stylesheet" href="~/css/BookStore.css" asp-append-version="true"/>
@{
    var username = ViewBag.Username;
}
@* Section of Header website *@
<div id="header">
    <div class="container">
        <nav>
            <ul id="sideMenu">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li><a asp-controller="About" asp-action="Index">Profile</a></li>
                <li><a asp-controller="Book" asp-action="Store">Store</a></li>
                <li><a asp-controller="Book" asp-action="ViewBook" id="viewBookNavBtn">View Books</a></li>
                @if (ViewBag.Role == 1)
                {
                    <li><a asp-controller="Book" asp-action="AddBook" id="addBookNavBtn">Add Books</a></li>
                }
            </ul>
            <div class="nav-icons">
                @if (string.IsNullOrEmpty(username))
                {
                    <a asp-controller="User" asp-action="Login" class="icon-link">
                        <i class="fa-solid fa-user"></i>
                    </a>
                    <a asp-controller="Wishlist" asp-action="Index" class="icon-link">
                        <i class="fa-solid fa-heart"></i>
                    </a>
                }
                else
                {
                    <a asp-controller="Wishlist" asp-action="Index" class="icon-link">
                        <i class="fa-solid fa-heart"></i>
                    </a>
                    <a asp-controller="ShoppingCart" asp-action="Index" class="icon-link">
                        <i class="fa-solid fa-cart-shopping"></i>
                    </a>
                    <a asp-controller="User" asp-action="Logout" class="icon-link">
                        <i class="fa-solid fa-right-from-bracket"></i>
                    </a>
                }
            </div>
        </nav>
    </div>
</div>

@* Discount Section *@
<div class="hero-section">
    <div class="hero-content">
        <h1 class="hero-title">Holiday Season Sale<br>Up to 55% Off!</h1>
        <p class="hero-subtitle">Celebrate the New Year with amazing discounts on your favorite books.</p>
        <a href="#" class="hero-button">Shop Now</a>
    </div>
    <div class="hero-decoration"></div>
</div>

@* Summery of books *@
<div id="card-area">
    <div class="wrapper">
        <div class="box-area">
            <!-- HP Card -->
            <div class="box">
                <img src="~/images/HP.jpg" alt="Harry Potter Series">
                <div class="overlay">
                    <h3>Fantasy Books</h3>
                    <p>Discover magical worlds and epic adventures. Join Harry Potter on his journey through Hogwarts.</p>
                    <a href="#" class="book-now">Explore</a>
                </div>
            </div>

            <!-- Eragon Card -->
            <div class="box">
                <img src="~/images/ERAGON.jpeg" alt="Eragon Series">
                <div class="overlay">
                    <h3>Epic Fantasy</h3>
                    <p>Experience legendary tales of dragons and heroes with Eragon and Saphira.</p>
                    <a href="#" class="book-now">Explore</a>
                </div>
            </div>
            <!-- Gambit Card -->
            <div class="box">
                <img src="~/images/Gambit.jpeg" alt="Gambit Series">
                <div class="overlay">
                    <h3>Hard Thinking</h3>
                    <p>Experience legendary tales of dragons and heroes with Eragon and Saphira.</p>
                    <a href="#" class="book-now">Explore</a>
                </div>
            </div>

        </div>
    </div>
</div>

@* Filter and Search section *@
<div class="search-filter-wrapper">
    <div class="book-count">
        Showing @bookCount books
    </div>
    <div class="sf-search">
        <input
            type="search"
            class="sf-search__input"
            placeholder="Search books by title or author..."
        />
        <button class="sf-search__button">Search</button>
    </div>
    <div class="sf-controls">
        <div class="sf-sort">
            <select id="sortSelect" class="sf-sort__select">
                <option value="">Sort by...</option>
                <option value="price_asc">Price: Low to High</option>
                <option value="price_desc">Price: High to Low</option>
                <option value="year_desc">Newest First</option>
                <option value="year_asc">Oldest First</option>
                <option value="popular">Most Popular</option>
                <option value="on_sale">On Sale Only</option>
                <option value="borrowable">Available to Borrow</option>
            </select>
        </div>
        <div class="sf-filter">
            <div class="filter-group">
                <label>Genre:</label>
                <button class="sf-filter__btn sf-filter__btn--active" data-genre="all">All</button>
                @foreach (Genre genre in Enum.GetValues(typeof(Genre)))
                {
                    <button class="sf-filter__btn" data-genre="@genre">@genre</button>
                }
            </div>
            <div class="filter-group">
                <label>Age Restriction:</label>
                <select id="ageRestrictionSelect" class="sf-filter__select">
                    <option value="">All Ages</option>
                    @foreach (AgeRestriction age in Enum.GetValues(typeof(AgeRestriction)))
                    {
                        <option value="@age">@(age switch {
                                AgeRestriction.All => "All Ages",
                                AgeRestriction.ThreePlus => "3+",
                                AgeRestriction.SevenPlus => "7+",
                                AgeRestriction.TwelvePlus => "12+",
                                AgeRestriction.SixteenPlus => "16+",
                                AgeRestriction.EighteenPlus => "18+",
                                _ => age.ToString()
                            })</option>
                    }
                </select>
            </div>
            <div class="filter-group">
                <label>Price Range:</label>
                <input type="number" id="minPrice" placeholder="Min" class="sf-filter__input" />
                <input type="number" id="maxPrice" placeholder="Max" class="sf-filter__input" />
            </div>
            <div class="filter-group">
                <label>Publication Year:</label>
                <input type="number" id="publishYear" placeholder="Year" class="sf-filter__input" />
            </div>
        </div>
        
    @* Showing books and deatils *@
    </div><div class="sf-products">
        @foreach (var book in Model)
        {
            <div class="sf-product-card @book.Genre" data-year="@book.PublishYear" data-age="@book.AgeRestriction">
            <div class="sf-product-card__image-wrapper">
                <img class="sf-product-card__image"
                     src="@(string.IsNullOrEmpty(book.ImageUrl)
                              ? "/images/book-placeholder.jpg"
                              : (book.ImageUrl.StartsWith("http", StringComparison.OrdinalIgnoreCase)
                                  ? book.ImageUrl
                                  : $"/images/Bookcovers/{book.ImageUrl}"))"
                     alt="@book.Title" />
                @if (book.IsAvailableToBorrow && book.AvailableCopies == 0)
                {
                    <div class="sf-product-card__queue"
                         data-book-id="@book.BookId"
                         onclick="console.log('Book ID:', @book.BookId)"
                         title="Join Waiting List For Borrow">
                        <i class="fas fa-clock"></i>
                    </div>
                }
            <div class="sf-product-card__wishlist" data-book-id="@book.BookId">
            <i class="fa-heart @(ViewBag.Wishlist?.Contains(book.BookId) == true ? "fas active" : "far")"></i>
            
        </div>
        <div class="sf-product-card__quantity">
            @book.AvailableCopies borrow copies left
        </div>
    </div>
    <div class="sf-product-card__content">
        <h5 class="sf-product-card__title">@book.Title</h5>
        <p class="sf-product-card__author">by @book.Author</p>
        <p class="sf-product-card__year">Published: @book.PublishYear</p>
        <select id="ageRestrictionSelect" class="sf-filter__select">
            <option value="">All Ages</option>  <!-- Remove this line -->
            @foreach (AgeRestriction age in Enum.GetValues(typeof(AgeRestriction)))
            {
                <option value="@age">@(age switch {
                        AgeRestriction.All => "All Ages",
                        AgeRestriction.ThreePlus => "3+",
                        AgeRestriction.SevenPlus => "7+",
                        AgeRestriction.TwelvePlus => "12+",
                        AgeRestriction.SixteenPlus => "16+",
                        AgeRestriction.EighteenPlus => "18+",
                        _ => age.ToString()
                    })</option>
            }
        </select>
        <div class="sf-product-card__prices">
            @if (book.IsOnDiscount)
            {
                <p class="price">
                    Buy: <span class="original-price text-decoration-line-through">$@book.BuyPrice.ToString("F2")</span>
                    <span class="discounted-price">$@book.DiscountedBuyPrice?.ToString("F2")</span>
                    <small class="discount-timer">Sale ends: @book.DiscountEndDate?.ToString("MM/dd/yyyy")</small>
                </p>
            }
            else
            {
                <p class="price">Buy: $@book.BuyPrice.ToString("F2")</p>
            }
            <p class="price">Borrow: $@book.BorrowPrice.ToString("F2")</p>
        </div>
        <div class="sf-product-card__actions">
            @if (book.IsAvailableToBuy)
            {
                <button class="buy-btn"
                        data-book-id="@book.BookId"
                        >
                    Buy
                </button>
            }
            @{
                var currentUsername = ViewBag.Username;
                var reservedUsername = book.ReservedForUsername;
            }
            <div style="display:none">
                Debug: Current User: @currentUsername
                Reserved For: @reservedUsername
                Match: @(book.ReservedForUsername == ViewBag.Username)
            </div>
            @if (book.IsAvailableToBorrow)
            {
                @if (book.IsReserved)
                {
                    @if (book.ReservedForUsername == ViewBag.Username)
                    {
                        <button class="borrow-btn" data-book-id="@book.BookId">
                            Borrow (Reserved for you - @Math.Floor((book.ReservationExpiry.Value - DateTime.Now).TotalMinutes) minutes left)
                        </button>
                    }
                }
                else if (book.AvailableCopies > 0)
                {
                    <button class="borrow-btn" data-book-id="@book.BookId">Borrow</button>
                }
                else
                {
                    <button class="queue-btn" data-book-id="@book.BookId">Join Queue</button>
                }
            }
        </div>
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="error-message">
                @TempData["ErrorMessage"]
            </div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="success-message">
                @TempData["SuccessMessage"]
            </div>
        }
    </div>
</div>
        }
    </div>
</div>

@*Message when entering the Waitinglist*@
<div id="waitingListDialog" class="custom-dialog" style="display: none;">
    <div class="dialog-content">
        <div class="dialog-header">
            <img class="dialog-book-image" id="dialogBookImage" src="" alt="Book cover">
            <h3 id="dialogBookTitle"></h3>
            <p id="dialogBookAuthor"></p>
            <p class="dialog-price">Borrow Price: $<span id="dialogBorrowPrice"></span></p>
        </div>
        <div class="dialog-info">
            <div id="newUserContent">
                <h4>Important Information:</h4>
                <ul>
                    <li>Current position in queue: #<span id="queuePosition"></span></li>
                    <li>You'll be notified by email when available</li>
                    <li>48 hours to borrow once notified</li>
                    <li>30-day maximum borrow period</li>
                </ul>
            </div>
            <div id="existingUserContent" style="display: none;">
                <p>You are currently in position #<span id="currentPosition"></span></p>
                <p>Estimated wait time: <span id="estimatedWait"></span> days</p>
                <p>Would you like to leave the waiting list?</p>
            </div>
        </div>
        <div class="dialog-actions">
            <button class="cancel-btn">Cancel</button>
            <button id="mainActionBtn" class="join-btn">Join Queue</button>
        </div>
    </div>
</div>

@* Keep existing footer *@
<div class="CR">
    <p>Copyright © Made by IlanShtilman and Ariel Prestin</p>
</div>

@section Scripts {
    <script src="~/js/BookStore.js" asp-append-version="true"></script>
}
